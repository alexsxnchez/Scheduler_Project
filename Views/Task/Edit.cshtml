@model Scheduler_Project.Models.ViewModels.UpdateTask

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Task", new { id = Model.Task.TaskID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Update Task</h4>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Task.TaskID, new { Name = "TaskID" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Task.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Task.TaskName, new { htmlAttributes = new { @class = "form-control", Name = "TaskName" } })
                        @Html.ValidationMessageFor(model => model.Task.TaskName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Task.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Task.TaskDescription, new { htmlAttributes = new { @class = "form-control", Name = "TaskDescription" } })
                        @Html.ValidationMessageFor(model => model.Task.TaskDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Task.TaskDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Task.TaskDate, new { htmlAttributes = new { @class = "form-control", Name = "TaskDate" } })
                        @Html.ValidationMessageFor(model => model.Task.TaskDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Task.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select name="CategoryID">
                            @foreach (var Category in Model.Allcategories)
                            {
                                //Auto-selects the Category the Task is currently assigned to
                                string selected = "";
                                if (Model.Task.CategoryID == Category.CategoryID)
                                {
                                    selected = "";
                                }
                                <option value="@Category.CategoryID" @selected>@Category.CategoryName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
