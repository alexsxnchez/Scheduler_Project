@model Scheduler_Project.Models.ViewModels.UpdateProject

@{
    ViewBag.Title = "Create";
}

<h2>Create A New Project</h2>

@using (Html.BeginForm())
{
    //This will set a hidden input field with value "_RequestVerificationToken"
    //The PlayerController Create Method will look for this token
    //This helps secure the Create() method from being called from other pages.
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Make Sure to fill all the fields</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row">

    <div class="form-group">
        @Html.LabelFor(model => model.Project.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Project.ProjectName, new { htmlAttributes = new { @class = "form-space", Name = "ProjectName" } })
            @Html.ValidationMessageFor(model => model.Project.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Project.ProjectDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Project.ProjectDescription, new { htmlAttributes = new { @class = "form-space-bg", Name = "ProjectDescription", @rows = 5, @cols = 33 } })
            @Html.ValidationMessageFor(model => model.Project.ProjectDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Project.ProjectDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Project.ProjectDate, new { htmlAttributes = new { @class = "form-space", Name = "ProjectDate"} })
            @Html.ValidationMessageFor(model => model.Project.ProjectDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Project.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="CategoryID">
                @foreach (var Category in Model.Allcategories)
                {
                    <option value="@Category.CategoryID">@Category.CategoryName</option>
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="button btn btn-success" />
        </div>
    </div>
</div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "List", "Category")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
